// import the 'firebase-functions' module and makes it avalaible via this 'functions' identifier:
import * as functions from 'firebase-functions';

// import the 'firebase-admin' module and makes it avalaible via this 'admin' identifier:
// CAUTION!!! This gives this code full read/write rights from/to the Realtime Database.
import * as admin from 'firebase-admin'

// initialize an admin app instance from which Realtime Database changes can be made:
admin.initializeApp();

// The Cloud Function named formatData below responds to any node creation 
// in the database path '/measures/{pushId}/', for instance 1023 in case
// of maximum luminosity. {pushId} (with curly braces) is a wildcard,
// representing for us the autogenerated pushId associated with the newly
// pushed measure, for instance '-LGuXlb0GZfwbKs0Rf8Y'.
export const formatData = functions.database.ref('/DHT11//{pushId}/')
    .onCreate(
        
        (snapshot, context) => {
           
            const original = snapshot.val(); 
            
            const pushId = context.params.pushId; 
            
            console.log(`Detected new measure ${original} with pushId ${pushId}`);
            
            return admin.database().ref('/DHT11/time_Humidity').push({
                value: original,
                timestamp: admin.database.ServerValue.TIMESTAMP // will be Epoch time in ms
            });
        });
        export const formatData1 = functions.database.ref('/DHT11/Temperature/{pushId}/')
    .onCreate(
        
        (snapshot, context) => {
           
            const original = snapshot.val(); 
            
            const pushId = context.params.pushId; 
            
            console.log(`Detected new measure ${original} with pushId ${pushId}`);
            
            return admin.database().ref('/DHT11/time_Temp').push({
                value: original,
                timestamp: admin.database.ServerValue.TIMESTAMP // will be Epoch time in ms
            });
        });
        export const formatData2 = functions.database.ref('/DHT11/Light/{pushId}/')
    .onCreate(
        
        (snapshot, context) => {
           
            const original = snapshot.val(); 
            
            const pushId = context.params.pushId; 
            
            console.log(`Detected new measure ${original} with pushId ${pushId}`);
            
            return admin.database().ref('/DHT11/time_light').push({
                value: original,
                timestamp: admin.database.ServerValue.TIMESTAMP // will be Epoch time in ms
            });
        });
        export const formatData3 = functions.database.ref('/DHT11/SoilMoisture_1/{pushId}/')
    .onCreate(
        
        (snapshot, context) => {
           
            const original = snapshot.val(); 
            
            const pushId = context.params.pushId; 
            
            console.log(`Detected new measure ${original} with pushId ${pushId}`);
            
            return admin.database().ref('/DHT11/time_soil_1').push({
                value: original,
                timestamp: admin.database.ServerValue.TIMESTAMP // will be Epoch time in ms
            });
        });
        export const formatData4 = functions.database.ref('/DHT11/SoilMoisture_2/{pushId}/')
    .onCreate(
        
        (snapshot, context) => {
           
            const original = snapshot.val(); 
            
            const pushId = context.params.pushId; 
            
            console.log(`Detected new measure ${original} with pushId ${pushId}`);
            
            return admin.database().ref('/DHT11/time_soil_2').push({
                value: original,
                timestamp: admin.database.ServerValue.TIMESTAMP // will be Epoch time in ms
            });
        });
        
        
        